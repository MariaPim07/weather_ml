version: "3.8"
x-airflow-environment: &airflow_environment
  - AIRFLOW__CORE__EXECUTOR=LocalExecutor
  - AIRFLOW__CORE__LOAD_DEFAULT_CONNECIONS=False
  - AIRFLOW__CORE__LOAD_EXEMPLES=False
  - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql://postgres:admin@postgres:5432/airflow
  - AIRFLOW__CORE__STORE_DAG_CODE=True
  - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
  - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
  - AIRFLOW__WEBSERVER__RBAC=False
  - AIRFLOW__WEBSERVER__WEB_SERVER_PORT=8080
x-airflow-image: &airflow_image apache/airflow:latest
services:
  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/script/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql

  dashboard:
    build: .
    ports:
      - "8501:8501"
    depends_on:
      - postgres
    environment:
      - DB_CONN=postgresql://postgres:admin@postgres/weather

  airflow_init:
    image: *airflow_image
    depends_on:
      - postgres
    environment: *airflow_environment
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
    entrypoint: >
      bash -c "
        chmod +x /wait-for-it.sh &&
        /wait-for-it.sh postgres:5432 -- \
        bash -c '
          echo PostgreSQL ready; 
          airflow db init &&
          airflow db migrate &&
          airflow users create --username airflow --password airflow --firstname air --lastname flow --role Admin --email airflow@gmail.com
        '
      "

  airflow_webserver:
    image: *airflow_image
    restart: always
    depends_on:
      - airflow_init
    ports:
      - "8080:8080"
    environment: *airflow_environment
    volumes:
      - logs:/opt/airflow/logs
      - ./wait-for-it.sh:/wait-for-it.sh
    entrypoint: ["bash", "/wait-for-it.sh", "postgres:5432", "--", "airflow", "webserver"]

  airflow_scheduler:
    image: *airflow_image
    restart: always
    depends_on:
      - airflow_webserver
    user: root
    environment: *airflow_environment
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/configurations.json:/tmp/conf_file/configurations.json
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/dags/data:/opt/airflow/dags/data
      - ./wait-for-it.sh:/wait-for-it.sh
    entrypoint: ["bash", "/wait-for-it.sh", "postgres:5432", "--", "airflow", "scheduler"]

volumes:
  postgres_data:
  logs: